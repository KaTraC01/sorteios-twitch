{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\site-sorteio\\\\src\\\\components\\\\ListaSorteio\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ListaSorteio.css\"; // Importando o CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListaSorteio({\n  onReiniciarLista\n}) {\n  _s();\n  // Estado para armazenar os participantes\n  const [participantes, setParticipantes] = useState([]);\n  const [novoParticipante, setNovoParticipante] = useState({\n    nome: \"\",\n    streamer: \"\"\n  });\n  const [tempoEspera, setTempoEspera] = useState(0);\n  const [listaCongelada, setListaCongelada] = useState(false);\n  const [sorteioRealizado, setSorteioRealizado] = useState(false);\n  const [ultimoVencedor, setUltimoVencedor] = useState(null); // Novo estado para o vencedor\n  const [mostrarInstrucoes, setMostrarInstrucoes] = useState(false); // Estado para exibir as instruções\n\n  // Atualiza o temporizador a cada segundo\n  useEffect(() => {\n    if (tempoEspera > 0) {\n      const timer = setTimeout(() => setTempoEspera(tempoEspera - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [tempoEspera]);\n\n  // Verifica a hora atual para congelar a lista e realizar o sorteio\n  useEffect(() => {\n    const verificarHorario = () => {\n      const agora = new Date();\n      const horas = agora.getHours();\n      const minutos = agora.getMinutes();\n\n      // **Congela a lista às 20h50**\n      if (horas === 20 && minutos >= 50) {\n        setListaCongelada(true);\n      }\n\n      // **Realiza o sorteio às 21h00**\n      if (horas === 21 && minutos === 0 && !sorteioRealizado) {\n        realizarSorteio();\n      }\n\n      // **Reseta a lista automaticamente às 21h05**\n      if (horas === 21 && minutos === 5 && sorteioRealizado) {\n        resetarLista();\n      }\n    };\n    verificarHorario();\n    const intervalo = setInterval(verificarHorario, 1000);\n    return () => clearInterval(intervalo);\n  }, [participantes, sorteioRealizado]);\n\n  // Função para realizar o sorteio\n  const realizarSorteio = () => {\n    if (participantes.length === 0) {\n      alert(\"Nenhum participante na lista. O sorteio foi cancelado.\");\n      return;\n    }\n    const vencedorIndex = Math.floor(Math.random() * participantes.length);\n    const vencedor = participantes[vencedorIndex];\n\n    // Atualiza o estado com o vencedor para exibir na interface\n    setUltimoVencedor({\n      nome: vencedor.nome,\n      streamer: vencedor.streamer,\n      numero: vencedorIndex + 1,\n      data: new Date().toLocaleDateString()\n    });\n    setSorteioRealizado(true);\n  };\n\n  // Função para resetar a lista às 21h05\n  const resetarLista = () => {\n    setParticipantes([]);\n    setListaCongelada(false);\n    setSorteioRealizado(false);\n    if (onReiniciarLista) {\n      onReiniciarLista(); // Notifica o Timer que a lista foi reiniciada\n    }\n  };\n\n  // Função para adicionar participante\n  const adicionarParticipante = () => {\n    if (listaCongelada) {\n      alert(\"A lista foi congelada! Você não pode mais adicionar nomes.\");\n      return;\n    }\n    if (tempoEspera > 0) {\n      alert(`Aguarde ${tempoEspera} segundos antes de adicionar outro nome.`);\n      return;\n    }\n    if (novoParticipante.nome && novoParticipante.streamer) {\n      setParticipantes([...participantes, novoParticipante]);\n      setNovoParticipante({\n        nome: \"\",\n        streamer: \"\"\n      });\n      setTempoEspera(10); // Define tempo de espera de 10 segundos\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lista-sorteio\",\n    children: [ultimoVencedor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vencedor-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFC6 \\xDAltimo Vencedor: \", ultimoVencedor.nome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDFA5 Escolheu: \", ultimoVencedor.streamer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD22 N\\xB0 Sorteado: \", ultimoVencedor.numero]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCC5 Data: \", ultimoVencedor.data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"como-participar-btn\",\n      onClick: () => setMostrarInstrucoes(!mostrarInstrucoes),\n      children: mostrarInstrucoes ? \"Fechar Instruções\" : \"Como Participar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), mostrarInstrucoes && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instrucoes\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCDD **Escreva seu nickname da Twitch** no campo indicado e o **nome do Streamer** que deseja que receba seu Sub.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDD04 Voc\\xEA **pode participar mais de uma vez** e escolher **diferentes streamers**.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u23F3 Os sorteios acontecem **\\xE0s 21h**, mas **a lista \\xE9 encerrada 10 minutos antes**. **N\\xE3o perca tempo!**\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lista de Participantes \", listaCongelada && \"(❄️ Lista Congelada Aguardando Sorteio ❄️)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formulario\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Seu nickname da Twitch\",\n        value: novoParticipante.nome,\n        onChange: e => setNovoParticipante({\n          ...novoParticipante,\n          nome: e.target.value\n        }),\n        disabled: listaCongelada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome do Streamer\",\n        value: novoParticipante.streamer,\n        onChange: e => setNovoParticipante({\n          ...novoParticipante,\n          streamer: e.target.value\n        }),\n        disabled: listaCongelada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adicionarParticipante,\n        disabled: tempoEspera > 0 || listaCongelada,\n        children: listaCongelada ? \"Lista Congelada ❄️\" : tempoEspera > 0 ? `Aguarde ${tempoEspera}s` : \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome na Twitch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Streamer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: participantes.map((p, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.streamer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(ListaSorteio, \"xco8306dhsWytOkW55fFoS8zoOU=\");\n_c = ListaSorteio;\nexport default ListaSorteio;\nvar _c;\n$RefreshReg$(_c, \"ListaSorteio\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListaSorteio","onReiniciarLista","_s","participantes","setParticipantes","novoParticipante","setNovoParticipante","nome","streamer","tempoEspera","setTempoEspera","listaCongelada","setListaCongelada","sorteioRealizado","setSorteioRealizado","ultimoVencedor","setUltimoVencedor","mostrarInstrucoes","setMostrarInstrucoes","timer","setTimeout","clearTimeout","verificarHorario","agora","Date","horas","getHours","minutos","getMinutes","realizarSorteio","resetarLista","intervalo","setInterval","clearInterval","length","alert","vencedorIndex","Math","floor","random","vencedor","numero","data","toLocaleDateString","adicionarParticipante","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","disabled","map","p","index","_c","$RefreshReg$"],"sources":["C:/Users/leona/OneDrive/Área de Trabalho/site-sorteio/src/components/ListaSorteio/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./ListaSorteio.css\"; // Importando o CSS\r\n\r\nfunction ListaSorteio({ onReiniciarLista }) {\r\n    // Estado para armazenar os participantes\r\n    const [participantes, setParticipantes] = useState([]);\r\n    const [novoParticipante, setNovoParticipante] = useState({ nome: \"\", streamer: \"\" });\r\n    const [tempoEspera, setTempoEspera] = useState(0);\r\n    const [listaCongelada, setListaCongelada] = useState(false);\r\n    const [sorteioRealizado, setSorteioRealizado] = useState(false);\r\n    const [ultimoVencedor, setUltimoVencedor] = useState(null); // Novo estado para o vencedor\r\n    const [mostrarInstrucoes, setMostrarInstrucoes] = useState(false); // Estado para exibir as instruções\r\n\r\n    // Atualiza o temporizador a cada segundo\r\n    useEffect(() => {\r\n        if (tempoEspera > 0) {\r\n            const timer = setTimeout(() => setTempoEspera(tempoEspera - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [tempoEspera]);\r\n\r\n    // Verifica a hora atual para congelar a lista e realizar o sorteio\r\n    useEffect(() => {\r\n        const verificarHorario = () => {\r\n            const agora = new Date();\r\n            const horas = agora.getHours();\r\n            const minutos = agora.getMinutes();\r\n\r\n            // **Congela a lista às 20h50**\r\n            if (horas === 20 && minutos >= 50) {\r\n                setListaCongelada(true);\r\n            }\r\n\r\n            // **Realiza o sorteio às 21h00**\r\n            if (horas === 21 && minutos === 0 && !sorteioRealizado) {\r\n                realizarSorteio();\r\n            }\r\n\r\n            // **Reseta a lista automaticamente às 21h05**\r\n            if (horas === 21 && minutos === 5 && sorteioRealizado) {\r\n                resetarLista();\r\n            }\r\n        };\r\n\r\n        verificarHorario();\r\n        const intervalo = setInterval(verificarHorario, 1000);\r\n        return () => clearInterval(intervalo);\r\n    }, [participantes, sorteioRealizado]);\r\n\r\n    // Função para realizar o sorteio\r\n    const realizarSorteio = () => {\r\n        if (participantes.length === 0) {\r\n            alert(\"Nenhum participante na lista. O sorteio foi cancelado.\");\r\n            return;\r\n        }\r\n\r\n        const vencedorIndex = Math.floor(Math.random() * participantes.length);\r\n        const vencedor = participantes[vencedorIndex];\r\n\r\n        // Atualiza o estado com o vencedor para exibir na interface\r\n        setUltimoVencedor({\r\n            nome: vencedor.nome,\r\n            streamer: vencedor.streamer,\r\n            numero: vencedorIndex + 1,\r\n            data: new Date().toLocaleDateString()\r\n        });\r\n\r\n        setSorteioRealizado(true);\r\n    };\r\n\r\n    // Função para resetar a lista às 21h05\r\n    const resetarLista = () => {\r\n        setParticipantes([]);\r\n        setListaCongelada(false);\r\n        setSorteioRealizado(false);\r\n\r\n        if (onReiniciarLista) {\r\n            onReiniciarLista(); // Notifica o Timer que a lista foi reiniciada\r\n        }\r\n    };\r\n\r\n    // Função para adicionar participante\r\n    const adicionarParticipante = () => {\r\n        if (listaCongelada) {\r\n            alert(\"A lista foi congelada! Você não pode mais adicionar nomes.\");\r\n            return;\r\n        }\r\n\r\n        if (tempoEspera > 0) {\r\n            alert(`Aguarde ${tempoEspera} segundos antes de adicionar outro nome.`);\r\n            return;\r\n        }\r\n\r\n        if (novoParticipante.nome && novoParticipante.streamer) {\r\n            setParticipantes([...participantes, novoParticipante]);\r\n            setNovoParticipante({ nome: \"\", streamer: \"\" });\r\n            setTempoEspera(10); // Define tempo de espera de 10 segundos\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"lista-sorteio\">\r\n            {/* Exibição do Último Vencedor */}\r\n            {ultimoVencedor && (\r\n                <div className=\"vencedor-info\">\r\n                    <h3>🏆 Último Vencedor: {ultimoVencedor.nome}</h3>\r\n                    <p>🎥 Escolheu: {ultimoVencedor.streamer}</p>\r\n                    <p>🔢 N° Sorteado: {ultimoVencedor.numero}</p>\r\n                    <p>📅 Data: {ultimoVencedor.data}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Botão \"Como Participar\" */}\r\n            <button className=\"como-participar-btn\" onClick={() => setMostrarInstrucoes(!mostrarInstrucoes)}>\r\n                {mostrarInstrucoes ? \"Fechar Instruções\" : \"Como Participar\"}\r\n            </button>\r\n\r\n            {/* Instruções de participação */}\r\n            {mostrarInstrucoes && (\r\n                <div className=\"instrucoes\">\r\n                    <p>\r\n                        📝 **Escreva seu nickname da Twitch** no campo indicado e o **nome do Streamer** que deseja que receba seu Sub.\r\n                    </p>\r\n                    <p>\r\n                        🔄 Você **pode participar mais de uma vez** e escolher **diferentes streamers**.\r\n                    </p>\r\n                    <p>\r\n                        ⏳ Os sorteios acontecem **às 21h**, mas **a lista é encerrada 10 minutos antes**. **Não perca tempo!**\r\n                    </p>\r\n                </div>\r\n            )}\r\n\r\n            <h2>Lista de Participantes {listaCongelada && \"(❄️ Lista Congelada Aguardando Sorteio ❄️)\"}</h2>\r\n\r\n            {/* Campos para inserir o nome e o streamer */}\r\n            <div className=\"formulario\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Seu nickname da Twitch\"\r\n                    value={novoParticipante.nome}\r\n                    onChange={(e) => setNovoParticipante({ ...novoParticipante, nome: e.target.value })}\r\n                    disabled={listaCongelada}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nome do Streamer\"\r\n                    value={novoParticipante.streamer}\r\n                    onChange={(e) => setNovoParticipante({ ...novoParticipante, streamer: e.target.value })}\r\n                    disabled={listaCongelada}\r\n                />\r\n                <button onClick={adicionarParticipante} disabled={tempoEspera > 0 || listaCongelada}>\r\n                    {listaCongelada ? \"Lista Congelada ❄️\" : tempoEspera > 0 ? `Aguarde ${tempoEspera}s` : \"Confirmar\"}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Exibição da lista */}\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Nome na Twitch</th>\r\n                        <th>Streamer</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {participantes.map((p, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{p.nome}</td>\r\n                            <td>{p.streamer}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaSorteio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}