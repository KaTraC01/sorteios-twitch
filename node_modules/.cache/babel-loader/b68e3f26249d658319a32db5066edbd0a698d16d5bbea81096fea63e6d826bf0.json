{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\site-sorteio\\\\src\\\\components\\\\Timer\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Timer.css\"; // Importa o CSS do Timer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  listaReiniciada\n}) {\n  _s();\n  // Estado para armazenar o tempo restante\n  const [tempoRestante, setTempoRestante] = useState(calcularTempoRestante());\n\n  // Função que calcula o tempo restante até o sorteio\n  function calcularTempoRestante() {\n    const agora = new Date();\n    const sorteioHora = new Date();\n    sorteioHora.setHours(16, 52, 0, 0); // Define a hora do sorteio\n\n    let diferenca = sorteioHora - agora;\n    if (diferenca <= 0) {\n      sorteioHora.setDate(sorteioHora.getDate() + 1); // Se já passou da hora, define para o dia seguinte\n      diferenca = sorteioHora - agora;\n    }\n    const horas = String(Math.floor(diferenca / (1000 * 60 * 60))).padStart(2, \"0\");\n    const minutos = String(Math.floor(diferenca % (1000 * 60 * 60) / (1000 * 60))).padStart(2, \"0\");\n    const segundos = String(Math.floor(diferenca % (1000 * 60) / 1000)).padStart(2, \"0\");\n    return `${horas}:${minutos}:${segundos}`;\n  }\n\n  // Atualiza o timer a cada segundo\n  useEffect(() => {\n    const intervalo = setInterval(() => {\n      setTempoRestante(calcularTempoRestante());\n    }, 1000);\n    return () => clearInterval(intervalo); // Limpa o intervalo ao desmontar\n  }, []);\n\n  // **Correção: Agora o timer reseta corretamente quando a lista for reiniciada**\n  useEffect(() => {\n    if (listaReiniciada) {\n      setTempoRestante(calcularTempoRestante()); // Recalcula o tempo restante ao resetar a lista\n    }\n  }, [listaReiniciada]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\u23F3 Sorteio em: \", tempoRestante]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"4uVtGsQU5E+3G0972jA4jCnDn7U=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","listaReiniciada","_s","tempoRestante","setTempoRestante","calcularTempoRestante","agora","Date","sorteioHora","setHours","diferenca","setDate","getDate","horas","String","Math","floor","padStart","minutos","segundos","intervalo","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leona/OneDrive/Área de Trabalho/site-sorteio/src/components/Timer/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Timer.css\"; // Importa o CSS do Timer\r\n\r\nfunction Timer({ listaReiniciada }) {\r\n    // Estado para armazenar o tempo restante\r\n    const [tempoRestante, setTempoRestante] = useState(calcularTempoRestante());\r\n\r\n    // Função que calcula o tempo restante até o sorteio\r\n    function calcularTempoRestante() {\r\n        const agora = new Date();\r\n        const sorteioHora = new Date();\r\n        sorteioHora.setHours(16, 52, 0, 0); // Define a hora do sorteio\r\n\r\n        let diferenca = sorteioHora - agora;\r\n        if (diferenca <= 0) {\r\n            sorteioHora.setDate(sorteioHora.getDate() + 1); // Se já passou da hora, define para o dia seguinte\r\n            diferenca = sorteioHora - agora;\r\n        }\r\n\r\n        const horas = String(Math.floor(diferenca / (1000 * 60 * 60))).padStart(2, \"0\");\r\n        const minutos = String(Math.floor((diferenca % (1000 * 60 * 60)) / (1000 * 60))).padStart(2, \"0\");\r\n        const segundos = String(Math.floor((diferenca % (1000 * 60)) / 1000)).padStart(2, \"0\");\r\n\r\n        return `${horas}:${minutos}:${segundos}`;\r\n    }\r\n\r\n    // Atualiza o timer a cada segundo\r\n    useEffect(() => {\r\n        const intervalo = setInterval(() => {\r\n            setTempoRestante(calcularTempoRestante());\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalo); // Limpa o intervalo ao desmontar\r\n    }, []);\r\n\r\n    // **Correção: Agora o timer reseta corretamente quando a lista for reiniciada**\r\n    useEffect(() => {\r\n        if (listaReiniciada) {\r\n            setTempoRestante(calcularTempoRestante()); // Recalcula o tempo restante ao resetar a lista\r\n        }\r\n    }, [listaReiniciada]);\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <span>⏳ Sorteio em: {tempoRestante}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,KAAKA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAACS,qBAAqB,CAAC,CAAC,CAAC;;EAE3E;EACA,SAASA,qBAAqBA,CAAA,EAAG;IAC7B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;IAC9BC,WAAW,CAACC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEpC,IAAIC,SAAS,GAAGF,WAAW,GAAGF,KAAK;IACnC,IAAII,SAAS,IAAI,CAAC,EAAE;MAChBF,WAAW,CAACG,OAAO,CAACH,WAAW,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChDF,SAAS,GAAGF,WAAW,GAAGF,KAAK;IACnC;IAEA,MAAMO,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACN,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC/E,MAAMC,OAAO,GAAGJ,MAAM,CAACC,IAAI,CAACC,KAAK,CAAEN,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjG,MAAME,QAAQ,GAAGL,MAAM,CAACC,IAAI,CAACC,KAAK,CAAEN,SAAS,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEtF,OAAO,GAAGJ,KAAK,IAAIK,OAAO,IAAIC,QAAQ,EAAE;EAC5C;;EAEA;EACAtB,SAAS,CAAC,MAAM;IACZ,MAAMuB,SAAS,GAAGC,WAAW,CAAC,MAAM;MAChCjB,gBAAgB,CAACC,qBAAqB,CAAC,CAAC,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMiB,aAAa,CAACF,SAAS,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvB,SAAS,CAAC,MAAM;IACZ,IAAII,eAAe,EAAE;MACjBG,gBAAgB,CAACC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C;EACJ,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;EAErB,oBACIF,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,eAClBzB,OAAA;MAAAyB,QAAA,GAAM,qBAAc,EAACrB,aAAa;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd;AAAC1B,EAAA,CA5CQF,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}