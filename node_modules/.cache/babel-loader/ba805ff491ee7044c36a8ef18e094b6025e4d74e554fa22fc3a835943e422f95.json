{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./ListaSorteio.css\";// Importando o CSS\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ListaSorteio(_ref){let{onReiniciarLista}=_ref;// Estado para armazenar os participantes\nconst[participantes,setParticipantes]=useState([]);const[novoParticipante,setNovoParticipante]=useState({nome:\"\",streamer:\"\"});const[tempoEspera,setTempoEspera]=useState(0);const[listaCongelada,setListaCongelada]=useState(false);const[sorteioRealizado,setSorteioRealizado]=useState(false);const[ultimoVencedor,setUltimoVencedor]=useState(null);// Novo estado para o vencedor\nconst[mostrarInstrucoes,setMostrarInstrucoes]=useState(false);// Estado para exibir as instruções\n// Atualiza o temporizador a cada segundo\nuseEffect(()=>{if(tempoEspera>0){const timer=setTimeout(()=>setTempoEspera(tempoEspera-1),1000);return()=>clearTimeout(timer);}},[tempoEspera]);// Verifica a hora atual para congelar a lista e realizar o sorteio\nuseEffect(()=>{const verificarHorario=()=>{const agora=new Date();const horas=agora.getHours();const minutos=agora.getMinutes();// **Congela a lista às 20h50**\nif(horas===20&&minutos>=50){setListaCongelada(true);}// **Realiza o sorteio às 21h00**\nif(horas===21&&minutos===0&&!sorteioRealizado){realizarSorteio();}// **Reseta a lista automaticamente às 21h05**\nif(horas===21&&minutos===5&&sorteioRealizado){resetarLista();}};verificarHorario();const intervalo=setInterval(verificarHorario,1000);return()=>clearInterval(intervalo);},[participantes,sorteioRealizado]);// Função para realizar o sorteio\nconst realizarSorteio=()=>{if(participantes.length===0){alert(\"Nenhum participante na lista. O sorteio foi cancelado.\");return;}const vencedorIndex=Math.floor(Math.random()*participantes.length);const vencedor=participantes[vencedorIndex];// Atualiza o estado com o vencedor para exibir na interface\nsetUltimoVencedor({nome:vencedor.nome,streamer:vencedor.streamer,numero:vencedorIndex+1,data:new Date().toLocaleDateString()});setSorteioRealizado(true);};// Função para resetar a lista às 21h05\nconst resetarLista=()=>{setParticipantes([]);setListaCongelada(false);setSorteioRealizado(false);if(onReiniciarLista){onReiniciarLista();// Notifica o Timer que a lista foi reiniciada\n}};// Função para adicionar participante\nconst adicionarParticipante=()=>{if(listaCongelada){alert(\"A lista foi congelada! Você não pode mais adicionar nomes.\");return;}if(tempoEspera>0){alert(`Aguarde ${tempoEspera} segundos antes de adicionar outro nome.`);return;}if(novoParticipante.nome&&novoParticipante.streamer){setParticipantes([...participantes,novoParticipante]);setNovoParticipante({nome:\"\",streamer:\"\"});setTempoEspera(10);// Define tempo de espera de 10 segundos\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"lista-sorteio\",children:[ultimoVencedor&&/*#__PURE__*/_jsxs(\"div\",{className:\"vencedor-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDFC6 \\xDAltimo Vencedor: \",ultimoVencedor.nome]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDFA5 Escolheu: \",ultimoVencedor.streamer]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDD22 N\\xB0 Sorteado: \",ultimoVencedor.numero]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCC5 Data: \",ultimoVencedor.data]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"como-participar-btn\",onClick:()=>setMostrarInstrucoes(!mostrarInstrucoes),children:mostrarInstrucoes?\"Fechar Instruções\":\"Como Participar\"}),mostrarInstrucoes&&/*#__PURE__*/_jsxs(\"div\",{className:\"instrucoes\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCDD **Escreva seu nickname da Twitch** no campo indicado e o **nome do Streamer** que deseja que receba seu Sub.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDD04 Voc\\xEA **pode participar mais de uma vez** e escolher **diferentes streamers**.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 Os sorteios acontecem **\\xE0s 21h**, mas **a lista \\xE9 encerrada 10 minutos antes**. **N\\xE3o perca tempo!**\"})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Lista de Participantes \",listaCongelada&&\"(❄️ Lista Congelada Aguardando Sorteio ❄️)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formulario\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Seu nickname da Twitch\",value:novoParticipante.nome,onChange:e=>setNovoParticipante({...novoParticipante,nome:e.target.value}),disabled:listaCongelada}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nome do Streamer\",value:novoParticipante.streamer,onChange:e=>setNovoParticipante({...novoParticipante,streamer:e.target.value}),disabled:listaCongelada}),/*#__PURE__*/_jsx(\"button\",{onClick:adicionarParticipante,disabled:tempoEspera>0||listaCongelada,children:listaCongelada?\"Lista Congelada ❄️\":tempoEspera>0?`Aguarde ${tempoEspera}s`:\"Confirmar\"})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nome na Twitch\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Streamer\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:participantes.map((p,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:p.nome}),/*#__PURE__*/_jsx(\"td\",{children:p.streamer})]},index))})]})]});}export default ListaSorteio;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","jsx","_jsx","ListaSorteio","_ref","onReiniciarLista","participantes","setParticipantes","novoParticipante","setNovoParticipante","nome","streamer","tempoEspera","setTempoEspera","listaCongelada","setListaCongelada","sorteioRealizado","setSorteioRealizado","ultimoVencedor","setUltimoVencedor","mostrarInstrucoes","setMostrarInstrucoes","timer","setTimeout","clearTimeout","verificarHorario","agora","Date","horas","getHours","minutos","getMinutes","realizarSorteio","resetarLista","intervalo","setInterval","clearInterval","length","alert","vencedorIndex","Math","floor","random","vencedor","numero","data","toLocaleDateString","adicionarParticipante","className","children","onClick","type","placeholder","value","onChange","e","target","disabled","map","p","index"],"sources":["C:/Users/leona/OneDrive/Área de Trabalho/site-sorteio/src/components/ListaSorteio/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./ListaSorteio.css\"; // Importando o CSS\r\n\r\nfunction ListaSorteio({ onReiniciarLista }) {\r\n    // Estado para armazenar os participantes\r\n    const [participantes, setParticipantes] = useState([]);\r\n    const [novoParticipante, setNovoParticipante] = useState({ nome: \"\", streamer: \"\" });\r\n    const [tempoEspera, setTempoEspera] = useState(0);\r\n    const [listaCongelada, setListaCongelada] = useState(false);\r\n    const [sorteioRealizado, setSorteioRealizado] = useState(false);\r\n    const [ultimoVencedor, setUltimoVencedor] = useState(null); // Novo estado para o vencedor\r\n    const [mostrarInstrucoes, setMostrarInstrucoes] = useState(false); // Estado para exibir as instruções\r\n\r\n    // Atualiza o temporizador a cada segundo\r\n    useEffect(() => {\r\n        if (tempoEspera > 0) {\r\n            const timer = setTimeout(() => setTempoEspera(tempoEspera - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [tempoEspera]);\r\n\r\n    // Verifica a hora atual para congelar a lista e realizar o sorteio\r\n    useEffect(() => {\r\n        const verificarHorario = () => {\r\n            const agora = new Date();\r\n            const horas = agora.getHours();\r\n            const minutos = agora.getMinutes();\r\n\r\n            // **Congela a lista às 20h50**\r\n            if (horas === 20 && minutos >= 50) {\r\n                setListaCongelada(true);\r\n            }\r\n\r\n            // **Realiza o sorteio às 21h00**\r\n            if (horas === 21 && minutos === 0 && !sorteioRealizado) {\r\n                realizarSorteio();\r\n            }\r\n\r\n            // **Reseta a lista automaticamente às 21h05**\r\n            if (horas === 21 && minutos === 5 && sorteioRealizado) {\r\n                resetarLista();\r\n            }\r\n        };\r\n\r\n        verificarHorario();\r\n        const intervalo = setInterval(verificarHorario, 1000);\r\n        return () => clearInterval(intervalo);\r\n    }, [participantes, sorteioRealizado]);\r\n\r\n    // Função para realizar o sorteio\r\n    const realizarSorteio = () => {\r\n        if (participantes.length === 0) {\r\n            alert(\"Nenhum participante na lista. O sorteio foi cancelado.\");\r\n            return;\r\n        }\r\n\r\n        const vencedorIndex = Math.floor(Math.random() * participantes.length);\r\n        const vencedor = participantes[vencedorIndex];\r\n\r\n        // Atualiza o estado com o vencedor para exibir na interface\r\n        setUltimoVencedor({\r\n            nome: vencedor.nome,\r\n            streamer: vencedor.streamer,\r\n            numero: vencedorIndex + 1,\r\n            data: new Date().toLocaleDateString()\r\n        });\r\n\r\n        setSorteioRealizado(true);\r\n    };\r\n\r\n    // Função para resetar a lista às 21h05\r\n    const resetarLista = () => {\r\n        setParticipantes([]);\r\n        setListaCongelada(false);\r\n        setSorteioRealizado(false);\r\n\r\n        if (onReiniciarLista) {\r\n            onReiniciarLista(); // Notifica o Timer que a lista foi reiniciada\r\n        }\r\n    };\r\n\r\n    // Função para adicionar participante\r\n    const adicionarParticipante = () => {\r\n        if (listaCongelada) {\r\n            alert(\"A lista foi congelada! Você não pode mais adicionar nomes.\");\r\n            return;\r\n        }\r\n\r\n        if (tempoEspera > 0) {\r\n            alert(`Aguarde ${tempoEspera} segundos antes de adicionar outro nome.`);\r\n            return;\r\n        }\r\n\r\n        if (novoParticipante.nome && novoParticipante.streamer) {\r\n            setParticipantes([...participantes, novoParticipante]);\r\n            setNovoParticipante({ nome: \"\", streamer: \"\" });\r\n            setTempoEspera(10); // Define tempo de espera de 10 segundos\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"lista-sorteio\">\r\n            {/* Exibição do Último Vencedor */}\r\n            {ultimoVencedor && (\r\n                <div className=\"vencedor-info\">\r\n                    <h3>🏆 Último Vencedor: {ultimoVencedor.nome}</h3>\r\n                    <p>🎥 Escolheu: {ultimoVencedor.streamer}</p>\r\n                    <p>🔢 N° Sorteado: {ultimoVencedor.numero}</p>\r\n                    <p>📅 Data: {ultimoVencedor.data}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Botão \"Como Participar\" */}\r\n            <button className=\"como-participar-btn\" onClick={() => setMostrarInstrucoes(!mostrarInstrucoes)}>\r\n                {mostrarInstrucoes ? \"Fechar Instruções\" : \"Como Participar\"}\r\n            </button>\r\n\r\n            {/* Instruções de participação */}\r\n            {mostrarInstrucoes && (\r\n                <div className=\"instrucoes\">\r\n                    <p>\r\n                        📝 **Escreva seu nickname da Twitch** no campo indicado e o **nome do Streamer** que deseja que receba seu Sub.\r\n                    </p>\r\n                    <p>\r\n                        🔄 Você **pode participar mais de uma vez** e escolher **diferentes streamers**.\r\n                    </p>\r\n                    <p>\r\n                        ⏳ Os sorteios acontecem **às 21h**, mas **a lista é encerrada 10 minutos antes**. **Não perca tempo!**\r\n                    </p>\r\n                </div>\r\n            )}\r\n\r\n            <h2>Lista de Participantes {listaCongelada && \"(❄️ Lista Congelada Aguardando Sorteio ❄️)\"}</h2>\r\n\r\n            {/* Campos para inserir o nome e o streamer */}\r\n            <div className=\"formulario\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Seu nickname da Twitch\"\r\n                    value={novoParticipante.nome}\r\n                    onChange={(e) => setNovoParticipante({ ...novoParticipante, nome: e.target.value })}\r\n                    disabled={listaCongelada}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nome do Streamer\"\r\n                    value={novoParticipante.streamer}\r\n                    onChange={(e) => setNovoParticipante({ ...novoParticipante, streamer: e.target.value })}\r\n                    disabled={listaCongelada}\r\n                />\r\n                <button onClick={adicionarParticipante} disabled={tempoEspera > 0 || listaCongelada}>\r\n                    {listaCongelada ? \"Lista Congelada ❄️\" : tempoEspera > 0 ? `Aguarde ${tempoEspera}s` : \"Confirmar\"}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Exibição da lista */}\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Nome na Twitch</th>\r\n                        <th>Streamer</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {participantes.map((p, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{p.nome}</td>\r\n                            <td>{p.streamer}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaSorteio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}