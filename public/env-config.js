// Este arquivo pode ser usado para injetar vari√°veis de ambiente no frontend
// Ser√° carregado antes da aplica√ß√£o React
//.
// AVISO: Este arquivo n√£o deve conter credenciais reais em produ√ß√£o!
// As vari√°veis de ambiente devem ser injetadas pelo processo de build da Vercel

// Definir window.__ENV__ apenas se n√£o existir (evita expor a estrutura)
window.__ENV__ = window.__ENV__ || {};

// Fun√ß√£o para verificar se estamos em ambiente de produ√ß√£o
function isProduction() {
  // Verificar se a URL atual cont√©m 'localhost' ou √© um ambiente de desenvolvimento
  return !(
    window.location.hostname.includes('localhost') || 
    window.location.hostname.includes('127.0.0.1') ||
    window.location.hostname.includes('.vercel.app') // ambientes de preview
  );
}

// Fun√ß√£o para log seguro (s√≥ mostra em desenvolvimento)
function logSeguro(mensagem, ...args) {
  if (!isProduction()) {
    console.log(mensagem, ...args);
  }
}

// Fun√ß√£o para log de erro (mostrar vers√£o simplificada em produ√ß√£o)
function logErro(mensagem, ...args) {
  if (isProduction()) {
    console.error("Erro de configura√ß√£o. Verifique as vari√°veis de ambiente.");
  } else {
    console.error(mensagem, ...args);
  }
}

// Fun√ß√£o para verificar e configurar as vari√°veis de ambiente
function configurarVariaveisSupabase() {
  // SEGURAN√áA APRIMORADA: Verificar apenas vari√°veis j√° injetadas durante o build
  
  // Verificar se as vari√°veis j√° est√£o dispon√≠veis (injetadas pela Vercel)
  let supabaseUrl = window.NEXT_PUBLIC_SUPABASE_URL;
  let supabaseAnonKey = window.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  
  // Fallback para window.__ENV__ se necess√°rio (apenas se injetado de forma segura)
  if (!supabaseUrl && window.__ENV__ && window.__ENV__.SUPABASE_URL) {
    supabaseUrl = window.__ENV__.SUPABASE_URL;
    window.NEXT_PUBLIC_SUPABASE_URL = supabaseUrl;
  }
  
  if (!supabaseAnonKey && window.__ENV__ && window.__ENV__.SUPABASE_ANON_KEY) {
    supabaseAnonKey = window.__ENV__.SUPABASE_ANON_KEY;
    window.NEXT_PUBLIC_SUPABASE_ANON_KEY = supabaseAnonKey;
  }
  
  // Verificar configura√ß√£o (sem expor as chaves)
  const urlConfigurada = !!supabaseUrl;
  const keyConfigurada = !!supabaseAnonKey;
  
  if (urlConfigurada && keyConfigurada) {
    logSeguro('‚úÖ Vari√°veis do Supabase configuradas com sucesso no frontend!');
    logSeguro(`‚úÖ URL detectada: ${supabaseUrl ? '***.' + supabaseUrl.split('.').slice(-2).join('.') : 'N√£o'}`);
    logSeguro(`‚úÖ Chave detectada: ${supabaseAnonKey ? `***${supabaseAnonKey.slice(-4)}` : 'N√£o'}`);
  } else {
    logErro('‚ùå ERRO: Falha ao configurar vari√°veis do Supabase no frontend!');
    logErro(`URL configurada: ${urlConfigurada ? 'Sim' : 'N√£o'}`);
    logErro(`Chave configurada: ${keyConfigurada ? 'Sim' : 'N√£o'}`);
    logErro('üîß Verifique as vari√°veis de ambiente na Vercel:');
    logErro('   - NEXT_PUBLIC_SUPABASE_URL');
    logErro('   - NEXT_PUBLIC_SUPABASE_ANON_KEY');
  }
}

// Executar a configura√ß√£o apenas no navegador
if (typeof window !== 'undefined') {
  configurarVariaveisSupabase();
} 